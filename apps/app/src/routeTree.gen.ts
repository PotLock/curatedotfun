/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LayoutImport } from "./routes/_layout";
import { Route as LayoutIndexImport } from "./routes/_layout/index";
import { Route as LayoutLeaderboardImport } from "./routes/_layout/leaderboard";
import { Route as LayoutProfileIndexImport } from "./routes/_layout/profile/index";
import { Route as LayoutPluginIndexImport } from "./routes/_layout/plugin/index";
import { Route as LayoutProfileRootImport } from "./routes/_layout/profile/_root";
import { Route as LayoutPluginPluginIdImport } from "./routes/_layout/plugin/$pluginId";
import { Route as LayoutFeedFeedIdImport } from "./routes/_layout/feed/$feedId";
import { Route as LayoutCreatePluginImport } from "./routes/_layout/create/plugin";
import { Route as LayoutCreateFeedImport } from "./routes/_layout/create/feed";
import { Route as LayoutFeedFeedIdIndexImport } from "./routes/_layout/feed/$feedId/index";
import { Route as LayoutFeedFeedIdTokenImport } from "./routes/_layout/feed/$feedId/token";
import { Route as LayoutFeedFeedIdProposalsImport } from "./routes/_layout/feed/$feedId/proposals";
import { Route as LayoutFeedFeedIdPointsImport } from "./routes/_layout/feed/$feedId/points";
import { Route as LayoutFeedFeedIdMembersImport } from "./routes/_layout/feed/$feedId/members";
import { Route as LayoutFeedFeedIdCurationImport } from "./routes/_layout/feed/$feedId/curation";
import { Route as LayoutEditFeedFeedIdImport } from "./routes/_layout/edit/feed.$feedId";
import { Route as LayoutFeedFeedIdSettingsIndexImport } from "./routes/_layout/feed/$feedId/settings/index";
import { Route as LayoutFeedFeedIdSettingsConnectedImport } from "./routes/_layout/feed/$feedId/settings/connected";

// Create Virtual Routes

const LayoutProfileImport = createFileRoute("/_layout/profile")();

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: "/_layout",
  getParentRoute: () => rootRoute,
} as any);

const LayoutProfileRoute = LayoutProfileImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutIndexRoute = LayoutIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutLeaderboardRoute = LayoutLeaderboardImport.update({
  id: "/leaderboard",
  path: "/leaderboard",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutProfileIndexRoute = LayoutProfileIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LayoutProfileRoute,
} as any);

const LayoutPluginIndexRoute = LayoutPluginIndexImport.update({
  id: "/plugin/",
  path: "/plugin/",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutProfileRootRoute = LayoutProfileRootImport.update({
  id: "/_root",
  getParentRoute: () => LayoutProfileRoute,
} as any);

const LayoutPluginPluginIdRoute = LayoutPluginPluginIdImport.update({
  id: "/plugin/$pluginId",
  path: "/plugin/$pluginId",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutFeedFeedIdRoute = LayoutFeedFeedIdImport.update({
  id: "/feed/$feedId",
  path: "/feed/$feedId",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutCreatePluginRoute = LayoutCreatePluginImport.update({
  id: "/create/plugin",
  path: "/create/plugin",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutCreateFeedRoute = LayoutCreateFeedImport.update({
  id: "/create/feed",
  path: "/create/feed",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutFeedFeedIdIndexRoute = LayoutFeedFeedIdIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutFeedFeedIdTokenRoute = LayoutFeedFeedIdTokenImport.update({
  id: "/token",
  path: "/token",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutFeedFeedIdProposalsRoute = LayoutFeedFeedIdProposalsImport.update({
  id: "/proposals",
  path: "/proposals",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutFeedFeedIdPointsRoute = LayoutFeedFeedIdPointsImport.update({
  id: "/points",
  path: "/points",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutFeedFeedIdMembersRoute = LayoutFeedFeedIdMembersImport.update({
  id: "/members",
  path: "/members",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutFeedFeedIdCurationRoute = LayoutFeedFeedIdCurationImport.update({
  id: "/curation",
  path: "/curation",
  getParentRoute: () => LayoutFeedFeedIdRoute,
} as any);

const LayoutEditFeedFeedIdRoute = LayoutEditFeedFeedIdImport.update({
  id: "/edit/feed/$feedId",
  path: "/edit/feed/$feedId",
  getParentRoute: () => LayoutRoute,
} as any);

const LayoutFeedFeedIdSettingsIndexRoute =
  LayoutFeedFeedIdSettingsIndexImport.update({
    id: "/settings/",
    path: "/settings/",
    getParentRoute: () => LayoutFeedFeedIdRoute,
  } as any);

const LayoutFeedFeedIdSettingsConnectedRoute =
  LayoutFeedFeedIdSettingsConnectedImport.update({
    id: "/settings/connected",
    path: "/settings/connected",
    getParentRoute: () => LayoutFeedFeedIdRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_layout": {
      id: "/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout/leaderboard": {
      id: "/_layout/leaderboard";
      path: "/leaderboard";
      fullPath: "/leaderboard";
      preLoaderRoute: typeof LayoutLeaderboardImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/": {
      id: "/_layout/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LayoutIndexImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/create/feed": {
      id: "/_layout/create/feed";
      path: "/create/feed";
      fullPath: "/create/feed";
      preLoaderRoute: typeof LayoutCreateFeedImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/create/plugin": {
      id: "/_layout/create/plugin";
      path: "/create/plugin";
      fullPath: "/create/plugin";
      preLoaderRoute: typeof LayoutCreatePluginImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/feed/$feedId": {
      id: "/_layout/feed/$feedId";
      path: "/feed/$feedId";
      fullPath: "/feed/$feedId";
      preLoaderRoute: typeof LayoutFeedFeedIdImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/plugin/$pluginId": {
      id: "/_layout/plugin/$pluginId";
      path: "/plugin/$pluginId";
      fullPath: "/plugin/$pluginId";
      preLoaderRoute: typeof LayoutPluginPluginIdImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/profile": {
      id: "/_layout/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof LayoutProfileImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/profile/_root": {
      id: "/_layout/profile/_root";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof LayoutProfileRootImport;
      parentRoute: typeof LayoutProfileRoute;
    };
    "/_layout/plugin/": {
      id: "/_layout/plugin/";
      path: "/plugin";
      fullPath: "/plugin";
      preLoaderRoute: typeof LayoutPluginIndexImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/profile/": {
      id: "/_layout/profile/";
      path: "/";
      fullPath: "/profile/";
      preLoaderRoute: typeof LayoutProfileIndexImport;
      parentRoute: typeof LayoutProfileImport;
    };
    "/_layout/edit/feed/$feedId": {
      id: "/_layout/edit/feed/$feedId";
      path: "/edit/feed/$feedId";
      fullPath: "/edit/feed/$feedId";
      preLoaderRoute: typeof LayoutEditFeedFeedIdImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/feed/$feedId/curation": {
      id: "/_layout/feed/$feedId/curation";
      path: "/curation";
      fullPath: "/feed/$feedId/curation";
      preLoaderRoute: typeof LayoutFeedFeedIdCurationImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/members": {
      id: "/_layout/feed/$feedId/members";
      path: "/members";
      fullPath: "/feed/$feedId/members";
      preLoaderRoute: typeof LayoutFeedFeedIdMembersImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/points": {
      id: "/_layout/feed/$feedId/points";
      path: "/points";
      fullPath: "/feed/$feedId/points";
      preLoaderRoute: typeof LayoutFeedFeedIdPointsImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/proposals": {
      id: "/_layout/feed/$feedId/proposals";
      path: "/proposals";
      fullPath: "/feed/$feedId/proposals";
      preLoaderRoute: typeof LayoutFeedFeedIdProposalsImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/token": {
      id: "/_layout/feed/$feedId/token";
      path: "/token";
      fullPath: "/feed/$feedId/token";
      preLoaderRoute: typeof LayoutFeedFeedIdTokenImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/": {
      id: "/_layout/feed/$feedId/";
      path: "/";
      fullPath: "/feed/$feedId/";
      preLoaderRoute: typeof LayoutFeedFeedIdIndexImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/settings/connected": {
      id: "/_layout/feed/$feedId/settings/connected";
      path: "/settings/connected";
      fullPath: "/feed/$feedId/settings/connected";
      preLoaderRoute: typeof LayoutFeedFeedIdSettingsConnectedImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
    "/_layout/feed/$feedId/settings/": {
      id: "/_layout/feed/$feedId/settings/";
      path: "/settings";
      fullPath: "/feed/$feedId/settings";
      preLoaderRoute: typeof LayoutFeedFeedIdSettingsIndexImport;
      parentRoute: typeof LayoutFeedFeedIdImport;
    };
  }
}

// Create and export the route tree

interface LayoutFeedFeedIdRouteChildren {
  LayoutFeedFeedIdCurationRoute: typeof LayoutFeedFeedIdCurationRoute;
  LayoutFeedFeedIdMembersRoute: typeof LayoutFeedFeedIdMembersRoute;
  LayoutFeedFeedIdPointsRoute: typeof LayoutFeedFeedIdPointsRoute;
  LayoutFeedFeedIdProposalsRoute: typeof LayoutFeedFeedIdProposalsRoute;
  LayoutFeedFeedIdTokenRoute: typeof LayoutFeedFeedIdTokenRoute;
  LayoutFeedFeedIdIndexRoute: typeof LayoutFeedFeedIdIndexRoute;
  LayoutFeedFeedIdSettingsConnectedRoute: typeof LayoutFeedFeedIdSettingsConnectedRoute;
  LayoutFeedFeedIdSettingsIndexRoute: typeof LayoutFeedFeedIdSettingsIndexRoute;
}

const LayoutFeedFeedIdRouteChildren: LayoutFeedFeedIdRouteChildren = {
  LayoutFeedFeedIdCurationRoute: LayoutFeedFeedIdCurationRoute,
  LayoutFeedFeedIdMembersRoute: LayoutFeedFeedIdMembersRoute,
  LayoutFeedFeedIdPointsRoute: LayoutFeedFeedIdPointsRoute,
  LayoutFeedFeedIdProposalsRoute: LayoutFeedFeedIdProposalsRoute,
  LayoutFeedFeedIdTokenRoute: LayoutFeedFeedIdTokenRoute,
  LayoutFeedFeedIdIndexRoute: LayoutFeedFeedIdIndexRoute,
  LayoutFeedFeedIdSettingsConnectedRoute:
    LayoutFeedFeedIdSettingsConnectedRoute,
  LayoutFeedFeedIdSettingsIndexRoute: LayoutFeedFeedIdSettingsIndexRoute,
};

const LayoutFeedFeedIdRouteWithChildren =
  LayoutFeedFeedIdRoute._addFileChildren(LayoutFeedFeedIdRouteChildren);

interface LayoutProfileRouteChildren {
  LayoutProfileRootRoute: typeof LayoutProfileRootRoute;
  LayoutProfileIndexRoute: typeof LayoutProfileIndexRoute;
}

const LayoutProfileRouteChildren: LayoutProfileRouteChildren = {
  LayoutProfileRootRoute: LayoutProfileRootRoute,
  LayoutProfileIndexRoute: LayoutProfileIndexRoute,
};

const LayoutProfileRouteWithChildren = LayoutProfileRoute._addFileChildren(
  LayoutProfileRouteChildren,
);

interface LayoutRouteChildren {
  LayoutLeaderboardRoute: typeof LayoutLeaderboardRoute;
  LayoutIndexRoute: typeof LayoutIndexRoute;
  LayoutCreateFeedRoute: typeof LayoutCreateFeedRoute;
  LayoutCreatePluginRoute: typeof LayoutCreatePluginRoute;
  LayoutFeedFeedIdRoute: typeof LayoutFeedFeedIdRouteWithChildren;
  LayoutPluginPluginIdRoute: typeof LayoutPluginPluginIdRoute;
  LayoutProfileRoute: typeof LayoutProfileRouteWithChildren;
  LayoutPluginIndexRoute: typeof LayoutPluginIndexRoute;
  LayoutEditFeedFeedIdRoute: typeof LayoutEditFeedFeedIdRoute;
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLeaderboardRoute: LayoutLeaderboardRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutCreateFeedRoute: LayoutCreateFeedRoute,
  LayoutCreatePluginRoute: LayoutCreatePluginRoute,
  LayoutFeedFeedIdRoute: LayoutFeedFeedIdRouteWithChildren,
  LayoutPluginPluginIdRoute: LayoutPluginPluginIdRoute,
  LayoutProfileRoute: LayoutProfileRouteWithChildren,
  LayoutPluginIndexRoute: LayoutPluginIndexRoute,
  LayoutEditFeedFeedIdRoute: LayoutEditFeedFeedIdRoute,
};

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren);

export interface FileRoutesByFullPath {
  "": typeof LayoutRouteWithChildren;
  "/leaderboard": typeof LayoutLeaderboardRoute;
  "/": typeof LayoutIndexRoute;
  "/create/feed": typeof LayoutCreateFeedRoute;
  "/create/plugin": typeof LayoutCreatePluginRoute;
  "/feed/$feedId": typeof LayoutFeedFeedIdRouteWithChildren;
  "/plugin/$pluginId": typeof LayoutPluginPluginIdRoute;
  "/profile": typeof LayoutProfileRootRoute;
  "/plugin": typeof LayoutPluginIndexRoute;
  "/profile/": typeof LayoutProfileIndexRoute;
  "/edit/feed/$feedId": typeof LayoutEditFeedFeedIdRoute;
  "/feed/$feedId/curation": typeof LayoutFeedFeedIdCurationRoute;
  "/feed/$feedId/members": typeof LayoutFeedFeedIdMembersRoute;
  "/feed/$feedId/points": typeof LayoutFeedFeedIdPointsRoute;
  "/feed/$feedId/proposals": typeof LayoutFeedFeedIdProposalsRoute;
  "/feed/$feedId/token": typeof LayoutFeedFeedIdTokenRoute;
  "/feed/$feedId/": typeof LayoutFeedFeedIdIndexRoute;
  "/feed/$feedId/settings/connected": typeof LayoutFeedFeedIdSettingsConnectedRoute;
  "/feed/$feedId/settings": typeof LayoutFeedFeedIdSettingsIndexRoute;
}

export interface FileRoutesByTo {
  "/leaderboard": typeof LayoutLeaderboardRoute;
  "/": typeof LayoutIndexRoute;
  "/create/feed": typeof LayoutCreateFeedRoute;
  "/create/plugin": typeof LayoutCreatePluginRoute;
  "/plugin/$pluginId": typeof LayoutPluginPluginIdRoute;
  "/profile": typeof LayoutProfileIndexRoute;
  "/plugin": typeof LayoutPluginIndexRoute;
  "/edit/feed/$feedId": typeof LayoutEditFeedFeedIdRoute;
  "/feed/$feedId/curation": typeof LayoutFeedFeedIdCurationRoute;
  "/feed/$feedId/members": typeof LayoutFeedFeedIdMembersRoute;
  "/feed/$feedId/points": typeof LayoutFeedFeedIdPointsRoute;
  "/feed/$feedId/proposals": typeof LayoutFeedFeedIdProposalsRoute;
  "/feed/$feedId/token": typeof LayoutFeedFeedIdTokenRoute;
  "/feed/$feedId": typeof LayoutFeedFeedIdIndexRoute;
  "/feed/$feedId/settings/connected": typeof LayoutFeedFeedIdSettingsConnectedRoute;
  "/feed/$feedId/settings": typeof LayoutFeedFeedIdSettingsIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_layout": typeof LayoutRouteWithChildren;
  "/_layout/leaderboard": typeof LayoutLeaderboardRoute;
  "/_layout/": typeof LayoutIndexRoute;
  "/_layout/create/feed": typeof LayoutCreateFeedRoute;
  "/_layout/create/plugin": typeof LayoutCreatePluginRoute;
  "/_layout/feed/$feedId": typeof LayoutFeedFeedIdRouteWithChildren;
  "/_layout/plugin/$pluginId": typeof LayoutPluginPluginIdRoute;
  "/_layout/profile": typeof LayoutProfileRouteWithChildren;
  "/_layout/profile/_root": typeof LayoutProfileRootRoute;
  "/_layout/plugin/": typeof LayoutPluginIndexRoute;
  "/_layout/profile/": typeof LayoutProfileIndexRoute;
  "/_layout/edit/feed/$feedId": typeof LayoutEditFeedFeedIdRoute;
  "/_layout/feed/$feedId/curation": typeof LayoutFeedFeedIdCurationRoute;
  "/_layout/feed/$feedId/members": typeof LayoutFeedFeedIdMembersRoute;
  "/_layout/feed/$feedId/points": typeof LayoutFeedFeedIdPointsRoute;
  "/_layout/feed/$feedId/proposals": typeof LayoutFeedFeedIdProposalsRoute;
  "/_layout/feed/$feedId/token": typeof LayoutFeedFeedIdTokenRoute;
  "/_layout/feed/$feedId/": typeof LayoutFeedFeedIdIndexRoute;
  "/_layout/feed/$feedId/settings/connected": typeof LayoutFeedFeedIdSettingsConnectedRoute;
  "/_layout/feed/$feedId/settings/": typeof LayoutFeedFeedIdSettingsIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/leaderboard"
    | "/"
    | "/create/feed"
    | "/create/plugin"
    | "/feed/$feedId"
    | "/plugin/$pluginId"
    | "/profile"
    | "/plugin"
    | "/profile/"
    | "/edit/feed/$feedId"
    | "/feed/$feedId/curation"
    | "/feed/$feedId/members"
    | "/feed/$feedId/points"
    | "/feed/$feedId/proposals"
    | "/feed/$feedId/token"
    | "/feed/$feedId/"
    | "/feed/$feedId/settings/connected"
    | "/feed/$feedId/settings";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/leaderboard"
    | "/"
    | "/create/feed"
    | "/create/plugin"
    | "/plugin/$pluginId"
    | "/profile"
    | "/plugin"
    | "/edit/feed/$feedId"
    | "/feed/$feedId/curation"
    | "/feed/$feedId/members"
    | "/feed/$feedId/points"
    | "/feed/$feedId/proposals"
    | "/feed/$feedId/token"
    | "/feed/$feedId"
    | "/feed/$feedId/settings/connected"
    | "/feed/$feedId/settings";
  id:
    | "__root__"
    | "/_layout"
    | "/_layout/leaderboard"
    | "/_layout/"
    | "/_layout/create/feed"
    | "/_layout/create/plugin"
    | "/_layout/feed/$feedId"
    | "/_layout/plugin/$pluginId"
    | "/_layout/profile"
    | "/_layout/profile/_root"
    | "/_layout/plugin/"
    | "/_layout/profile/"
    | "/_layout/edit/feed/$feedId"
    | "/_layout/feed/$feedId/curation"
    | "/_layout/feed/$feedId/members"
    | "/_layout/feed/$feedId/points"
    | "/_layout/feed/$feedId/proposals"
    | "/_layout/feed/$feedId/token"
    | "/_layout/feed/$feedId/"
    | "/_layout/feed/$feedId/settings/connected"
    | "/_layout/feed/$feedId/settings/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/leaderboard",
        "/_layout/",
        "/_layout/create/feed",
        "/_layout/create/plugin",
        "/_layout/feed/$feedId",
        "/_layout/plugin/$pluginId",
        "/_layout/profile",
        "/_layout/plugin/",
        "/_layout/edit/feed/$feedId"
      ]
    },
    "/_layout/leaderboard": {
      "filePath": "_layout/leaderboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/create/feed": {
      "filePath": "_layout/create/feed.tsx",
      "parent": "/_layout"
    },
    "/_layout/create/plugin": {
      "filePath": "_layout/create/plugin.tsx",
      "parent": "/_layout"
    },
    "/_layout/feed/$feedId": {
      "filePath": "_layout/feed/$feedId.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/feed/$feedId/curation",
        "/_layout/feed/$feedId/members",
        "/_layout/feed/$feedId/points",
        "/_layout/feed/$feedId/proposals",
        "/_layout/feed/$feedId/token",
        "/_layout/feed/$feedId/",
        "/_layout/feed/$feedId/settings/connected",
        "/_layout/feed/$feedId/settings/"
      ]
    },
    "/_layout/plugin/$pluginId": {
      "filePath": "_layout/plugin/$pluginId.tsx",
      "parent": "/_layout"
    },
    "/_layout/profile": {
      "filePath": "_layout/profile",
      "parent": "/_layout",
      "children": [
        "/_layout/profile/_root",
        "/_layout/profile/"
      ]
    },
    "/_layout/profile/_root": {
      "filePath": "_layout/profile/_root.tsx",
      "parent": "/_layout/profile"
    },
    "/_layout/plugin/": {
      "filePath": "_layout/plugin/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/profile/": {
      "filePath": "_layout/profile/index.tsx",
      "parent": "/_layout/profile"
    },
    "/_layout/edit/feed/$feedId": {
      "filePath": "_layout/edit/feed.$feedId.tsx",
      "parent": "/_layout"
    },
    "/_layout/feed/$feedId/curation": {
      "filePath": "_layout/feed/$feedId/curation.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/members": {
      "filePath": "_layout/feed/$feedId/members.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/points": {
      "filePath": "_layout/feed/$feedId/points.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/proposals": {
      "filePath": "_layout/feed/$feedId/proposals.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/token": {
      "filePath": "_layout/feed/$feedId/token.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/": {
      "filePath": "_layout/feed/$feedId/index.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/settings/connected": {
      "filePath": "_layout/feed/$feedId/settings/connected.tsx",
      "parent": "/_layout/feed/$feedId"
    },
    "/_layout/feed/$feedId/settings/": {
      "filePath": "_layout/feed/$feedId/settings/index.tsx",
      "parent": "/_layout/feed/$feedId"
    }
  }
}
ROUTE_MANIFEST_END */
